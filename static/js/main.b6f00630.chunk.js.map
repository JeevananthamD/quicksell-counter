{"version":3,"sources":["components/redux/action.js","components/redux/constant.js","components/Form.js","components/Counter.js","components/CounterValue.js","App.js","reportWebVitals.js","components/redux/reducer.js","index.js"],"names":["actionGenerator","type","payload","handleInitialValue","handleMaxValue","handleSubmit","handleIncrement","handleDecrement","handleChange","handleSaving","putUrl","getUrl","Form","timeout","useSelector","state","initialValue","maxValue","dispatch","useDispatch","e","a","preventDefault","axios","put","counter","className","onSubmit","onChange","target","value","Counter","props","isSaving","setValue","data","saving","flag","useEffect","get","catch","err","console","log","res","clearTimeout","setTimeout","onClick","CounterValue","App","isSubmited","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","store","createStore","composeWithDevTools","applyMiddleware","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6f00630.chunk.js","sourcesContent":["export function actionGenerator(type, payload) {\r\n    return {\r\n        type,\r\n        payload\r\n    }\r\n}","export const handleInitialValue = \"handleInitialValue\";\r\nexport const handleMaxValue = \"handleMaxValue\";\r\nexport const handleSubmit = \"handleSubmit\";\r\nexport const handleIncrement = \"handleIncrement\";\r\nexport const handleDecrement = \"handleDecrement\";\r\nexport const handleChange = \"handleChange\";\r\nexport const handleSaving = \"handleSaving\";\r\nexport const putUrl = \"https://interview-8e4c5-default-rtdb.firebaseio.com/front-end.json\";\r\nexport const getUrl = \"https://interview-8e4c5-default-rtdb.firebaseio.com/front-end/counter.json\";\r\n\r\n","import React from 'react'\r\nimport \"../styles/Form.css\"\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { actionGenerator } from \"./redux/action\";\r\nimport {\r\n    handleSubmit,\r\n    handleInitialValue,\r\n    handleMaxValue,\r\n    getUrl,\r\n    putUrl\r\n} from \"./redux/constant\"\r\n\r\n\r\nfunction Form() {\r\n\r\n    const {\r\n        initialValue,\r\n        maxValue\r\n    } = useSelector(state => state);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function getInitialValue(e) {\r\n        dispatch(actionGenerator(handleInitialValue, e.target.value));\r\n    }\r\n\r\n    function getMaxValue(e) {\r\n        dispatch(actionGenerator(handleMaxValue, e.target.value));\r\n    }\r\n\r\n    async function submit(e) {\r\n        e.preventDefault();\r\n        await axios.put(putUrl, { counter: initialValue });\r\n        dispatch(actionGenerator(handleSubmit, true))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"title\">Submit the Form to open Counter</h1>\r\n            <form className=\"form\" onSubmit={submit}>\r\n                <div className=\"form_control\">\r\n                    <label>Initial Value</label>\r\n                    <input type=\"number\"\r\n                        onChange={getInitialValue}\r\n                        value={initialValue} />\r\n                </div>\r\n                <div className=\"form_control\">\r\n                    <label>Max Value</label>\r\n                    <input type=\"number\" onChange={getMaxValue} value={maxValue} />\r\n                </div>\r\n                <div className=\"form_control\">\r\n                    <button>Submit</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import axios from 'axios';\r\nimport React, { useEffect } from 'react'\r\nimport \"../styles/Counter.css\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { actionGenerator } from \"./redux/action\";\r\nimport {\r\n    getUrl,\r\n    putUrl,\r\n    handleIncrement,\r\n    handleDecrement,\r\n    handleChange,\r\n    handleSaving\r\n} from \"./redux/constant\";\r\n\r\nlet timeout;\r\n\r\nfunction Counter(props) {\r\n\r\n    const {\r\n        value,\r\n        maxValue,\r\n        isSaving\r\n    } = useSelector(state => state)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function increment() {\r\n        if (value < maxValue) dispatch(actionGenerator(handleIncrement, null));\r\n    }\r\n\r\n    function decrement() {\r\n        if (value > 0) dispatch(actionGenerator(handleDecrement, null));\r\n    }\r\n\r\n    function setValue(data) {\r\n        dispatch(actionGenerator(handleChange, data));\r\n    }\r\n\r\n    function saving(flag) {\r\n        dispatch(actionGenerator(handleSaving, flag));\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if (value === \"\") {\r\n            let res = await axios.get(getUrl)\r\n                .catch(err => console.log(err));\r\n            if (res.data === \"\") {\r\n                let putData = await axios.put(putUrl, { counter: 1 })\r\n                    .catch(err => console.log(err));\r\n                setValue(putData.data.counter);\r\n            }\r\n            else {\r\n                setValue(+res.data);\r\n            }\r\n        }\r\n        else {\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(async () => {\r\n                if (value > maxValue) {\r\n                    setValue(maxValue);\r\n                }\r\n                else if (value < 0) {\r\n                    setValue(0);\r\n                }\r\n                else if (value !== \"\") {\r\n                    let res = await axios.get(getUrl);\r\n                    if (value !== res.data) {\r\n                        saving(true);\r\n                        await axios.put(putUrl, { counter: value });\r\n                        saving(false);\r\n                    }\r\n                }\r\n            }, 600);\r\n        }\r\n    }, [value]);\r\n\r\n    return (\r\n        <div className=\"counter_container\">\r\n            {(value === \"\" || isSaving) ? <div className=\"saving\"><div className=\"loading\"></div><span>Saving counter value</span></div> : \"\"}\r\n            <div className=\"counter\">\r\n                <button className=\"decrement\" onClick={decrement}>\r\n                    -\r\n                </button>\r\n                <input className=\"count\" type=\"number\" onChange={e => setValue(+e.target.value)} value={value} />\r\n                <button className=\"increment\" onClick={increment}>\r\n                    +\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter\r\n","import React from 'react'\r\nimport \"../styles/CounterValue.css\";\r\nimport { useSelector } from \"react-redux\"\r\n\r\n\r\nfunction CounterValue() {\r\n\r\n    const value = useSelector(state => state.value);\r\n\r\n    return (\r\n        <div className=\"counter_value\">\r\n            Counter value: {value}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CounterValue\r\n","import React from 'react'\nimport './App.css';\nimport Form from './components/Form';\nimport Counter from './components/Counter';\nimport CounterValue from './components/CounterValue';\nimport { useSelector } from 'react-redux';\n\n\nfunction App() {\n\n  const isSubmited = useSelector(state => state.isSubmited);\n\n  return (\n    <div className=\"App\">\n      {(isSubmited) ?\n        <>\n          <Counter />\n          <CounterValue />\n        </>\n        :\n        <Form />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    handleInitialValue,\r\n    handleMaxValue,\r\n    handleSubmit,\r\n    handleChange,\r\n    handleIncrement,\r\n    handleDecrement,\r\n    handleSaving\r\n} from \"./constant\";\r\n\r\nconst initialState = {\r\n    initialValue: \"\",\r\n    maxValue: \"\",\r\n    isSubmited: false,\r\n    value: \"\",\r\n    isSaving: false\r\n}\r\n\r\n\r\nfunction reducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case handleInitialValue:\r\n            return { ...state, initialValue: action.payload }\r\n        case handleMaxValue:\r\n            return { ...state, maxValue: action.payload }\r\n        case handleSubmit:\r\n            return {\r\n                ...state, isSubmited: action.payload,\r\n                maxValue: (state.maxValue === \"\") ? 1000 : (state.maxValue < 1) ? 1 : state.maxValue\r\n            }\r\n        case handleIncrement:\r\n            return { ...state, value: state.value + 1 };\r\n        case handleDecrement:\r\n            return { ...state, value: state.value - 1 };\r\n        case handleChange:\r\n            return { ...state, value: action.payload };\r\n        case handleSaving:\r\n            return { ...state, isSaving: action.payload };\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducer from \"./components/redux/reducer\";\nimport { Provider } from 'react-redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger'\n\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(logger))\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}