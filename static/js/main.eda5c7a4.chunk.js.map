{"version":3,"sources":["components/Form.js","components/Counter.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","handleSubmit","handleInitialValue","handleMaxValue","initialValue","maxValue","className","onSubmit","type","onChange","value","Counter","useState","setValue","onClick","prev","e","num","target","App","setInitialValue","setMaxValue","isSubmited","setIsSubmited","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAiCeA,MA9Bf,SAAcC,GAEV,IACIC,EAKAD,EALAC,aACAC,EAIAF,EAJAE,mBACAC,EAGAH,EAHAG,eACAC,EAEAJ,EAFAI,aACAC,EACAL,EADAK,SAGJ,OACI,qCACI,oBAAIC,UAAU,QAAd,6CACA,uBAAMA,UAAU,OAAOC,SAAUN,EAAjC,UACI,sBAAKK,UAAU,eAAf,UACI,kDACA,uBAAOE,KAAK,SAASC,SAAUP,EAAoBQ,MAAON,OAE9D,sBAAKE,UAAU,eAAf,UACI,8CACA,uBAAOE,KAAK,SAASC,SAAUN,EAAgBO,MAAOL,OAE1D,qBAAKC,UAAU,eAAf,SACI,qD,MCuBLK,MA7Cf,SAAiBX,GAEb,MAA0BY,mBAAgC,IAAtBZ,EAAMI,aAAsB,GAAKJ,EAAMI,cAA3E,mBAAOM,EAAP,KAAcG,EAAd,KACMR,EAA+B,KAAnBL,EAAMK,SAAmB,KAAQL,EAAMK,SA2BzD,OACI,qBAAKC,UAAU,oBAAf,SACI,sBAAKA,UAAU,UAAf,UACI,wBAAQA,UAAU,YAAYQ,QAtB1C,WACQJ,EAAQ,GACRG,GAAS,SAAAE,GAAI,OAAIA,EAAO,MAoBpB,eAGA,uBAAOT,UAAU,QAAQE,KAAK,SAASC,SAnBnD,SAAsBO,GAClB,IAAIC,GAAOD,EAAEE,OAAOR,MAEhBG,EADAI,GAAOZ,GAAYY,GAAO,EACjBA,EAEJA,EAAMZ,EACFA,EAGA,IAU0DK,MAAOA,IACtE,wBAAQJ,UAAU,YAAYQ,QAhC1C,WACQJ,EAAQL,GACRQ,GAAS,SAAAE,GAAI,OAAIA,EAAO,MA8BpB,qBCADI,MApCf,WAEE,MAAwCP,mBAAS,IAAjD,mBAAOR,EAAP,KAAqBgB,EAArB,KACA,EAAgCR,mBAAS,IAAzC,mBAAOP,EAAP,KAAiBgB,EAAjB,KACA,EAAoCT,oBAAS,GAA7C,mBAAOU,EAAP,KAAmBC,EAAnB,KAeA,OACE,qBAAKjB,UAAU,MAAf,SACIgB,EACA,cAAC,EAAD,CAASlB,aAAcA,EAAcC,SAAUA,IAE/C,cAAC,EAAD,CACEJ,aAXR,SAAsBe,GACpBA,EAAEQ,iBACFD,GAAc,IAURpB,eAhBR,SAAwBa,GACtBK,EAAYL,EAAEE,OAAOR,QAgBfR,mBArBR,SAA4Bc,GAC1BI,EAAgBJ,EAAEE,OAAOR,QAqBnBN,aAAcA,EACdC,SAAUA,OCtBLoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eda5c7a4.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"../styles/Form.css\"\r\n\r\nfunction Form(props) {\r\n\r\n    const {\r\n        handleSubmit,\r\n        handleInitialValue,\r\n        handleMaxValue,\r\n        initialValue,\r\n        maxValue\r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"title\">Submit the Form to open Counter</h1>\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                <div className=\"form_control\">\r\n                    <label>Initial Value</label>\r\n                    <input type=\"number\" onChange={handleInitialValue} value={initialValue} />\r\n                </div>\r\n                <div className=\"form_control\">\r\n                    <label>Max Value</label>\r\n                    <input type=\"number\" onChange={handleMaxValue} value={maxValue} />\r\n                </div>\r\n                <div className=\"form_control\">\r\n                    <button>Submit</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React, { useState } from 'react'\r\nimport \"../styles/Counter.css\"\r\n\r\n\r\nfunction Counter(props) {\r\n\r\n    const [value, setValue] = useState((props.initialValue == \"\") ? 1 : +props.initialValue);\r\n    const maxValue = (props.maxValue === \"\") ? 1000 : +props.maxValue;\r\n\r\n    function handleIncrement() {\r\n        if (value < maxValue) {\r\n            setValue(prev => prev + 1);\r\n        }\r\n    }\r\n\r\n    function handleDecrement() {\r\n        if (value > 0) {\r\n            setValue(prev => prev - 1);\r\n        }\r\n    }\r\n\r\n    function handleChange(e) {\r\n        let num = +e.target.value;\r\n        if (num <= maxValue && num >= 0) {\r\n            setValue(num);\r\n        }\r\n        else if (num > maxValue) {\r\n            setValue(maxValue);\r\n        }\r\n        else {\r\n            setValue(0);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"counter_container\">\r\n            <div className=\"counter\">\r\n                <button className=\"decrement\" onClick={handleDecrement}>\r\n                    -\r\n                </button>\r\n                <input className=\"count\" type=\"number\" onChange={handleChange} value={value} />\r\n                <button className=\"increment\" onClick={handleIncrement}>\r\n                    +\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter\r\n","import React, { useState } from 'react'\nimport './App.css';\nimport Form from './components/Form';\nimport Counter from './components/Counter';\n\nfunction App() {\n\n  const [initialValue, setInitialValue] = useState(\"\");\n  const [maxValue, setMaxValue] = useState(\"\");\n  const [isSubmited, setIsSubmited] = useState(false);\n\n  function handleInitialValue(e) {\n    setInitialValue(e.target.value)\n  }\n\n  function handleMaxValue(e) {\n    setMaxValue(e.target.value)\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsSubmited(true);\n  }\n\n  return (\n    <div className=\"App\">\n      {(isSubmited) ?\n        <Counter initialValue={initialValue} maxValue={maxValue} />\n        :\n        <Form\n          handleSubmit={handleSubmit}\n          handleMaxValue={handleMaxValue}\n          handleInitialValue={handleInitialValue}\n          initialValue={initialValue}\n          maxValue={maxValue}\n        />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}